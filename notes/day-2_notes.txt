modules:
APIs which exposes the functionalities

module formats:
a. IIFE (Immediately Invocable Function Expression - IIFY)

({
	fn:function(){ },
        fn1:function(){}
},function(){
})();

b. Universal Module Definition (UMD)
c. Asynchronous Module Definition (AMD)
d. ES6 modules (export, import)
e. Common JS modules (module.exports, require)


module loader:
a. Require JS
b. System JS

Node JS: 
a runtime environment --> v8 engine
server side framework

React JS:
library to create client-side application

Angular:
1. component
2. Pipe
3. directive
4. service
5. DI
etc.


React applictaion:
a. React packages:
   react, react-dom

b. traspiler (compiler) packages [code (ES6) => code (older -- ES5/4/3/2...)]
  1. Core - @babel/core

  2. JS code containing ES6 features (const, let, arrow operator, import, export...)=> ES5/....
	 - individual ES6 fetaure specific babel plugins 
	 - preset: array/collection of plugins
		@babel/preset-env

  3. JSX code for React => JS
	 - individual React specific plugins
	 - preset: @babel/preset-react

  4. CLI: @babel/cli

command to install: npm i @babel/core @babel/cli @babel/preset-env @babel/preset-react --save-dev
command to run babel: .\node_modules\.bin\babel src --out-dir build
configuration of babel:
.babelrc:
{
 "presets":[ "@babel/preset-env",  "@babel/preset-react"]
}

c. bundler (webpack)
1. core webpack: webpack, webpack-cli
2. loaders: html-loader babel-loader css-loader style-loader file-loader csv-loader xml-loader sass-loader
3. plugins: html-webpack-plugin clean-webpack-plugin

mode: production and development

tool: create-react-app

npm i create-react-app -g
create-react-app react-first-app

npx create-react-app react-first-app

React:
a. component
b. passing data from one to another component (from parent to the nested/child component)